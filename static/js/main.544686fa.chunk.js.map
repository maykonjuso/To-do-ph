{"version":3,"sources":["components/TodoForm/TodoForm.js","components/Todo/Todo.js","components/TodoList/TodoList.js","App.js","index.js"],"names":["TodoForm","props","useState","edit","value","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","e","target","handleSubmit","preventDefault","onSubmit","id","Math","floor","random","text","className","placeholder","onChange","name","ref","onClick","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","map","todo","index","isComplete","TodoList","setTodos","test","newTodos","updatedTodos","removeArr","filter","todoId","newValue","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.544686fa.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./TodoForm.css\";\r\n\r\nfunction TodoForm(props) {\r\n  const [input, setInput] = useState(props.edit ? props.edit.value : \"\");\r\n\r\n  const inputRef = useRef(null);\r\n  useEffect(() => {\r\n    inputRef.current.focus();\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    props.onSubmit({\r\n      id: Math.floor(Math.random() * 10000),\r\n      text: input,\r\n    });\r\n\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"todo-form\">\r\n      {props.edit ? (\r\n        <>\r\n          <input\r\n            placeholder=\"Edite sua tarefa\"\r\n            value={input}\r\n            onChange={handleChange}\r\n            name=\"text\"\r\n            ref={inputRef}\r\n            className=\"todo-input edit1\"\r\n          />\r\n          <button onClick={handleSubmit} className=\"todo-button edit\">\r\n            Editar\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <input\r\n            placeholder=\"Adiciona uma tarefa\"\r\n            value={input}\r\n            onChange={handleChange}\r\n            name=\"text\"\r\n            className=\"todo-input\"\r\n            ref={inputRef}\r\n          />\r\n          <button onClick={handleSubmit} className=\"todo-button\">\r\n            Adicionar\r\n          </button>\r\n        </>\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default TodoForm;\r\n","import React, { useState } from \"react\";\r\nimport TodoForm from \"./../TodoForm/TodoForm\";\r\nimport { RiCloseLine } from \"react-icons/ri\";\r\nimport { AiFillEdit } from \"react-icons/ai\";\r\nimport \"./Todo.css\";\r\n\r\nfunction Todo({ todos, completeTodo, removeTodo, updateTodo }) {\r\n  const [edit, setEdit] = useState({\r\n    id: null,\r\n    value: \"\",\r\n  });\r\n\r\n  const submitUpdate = (value) => {\r\n    updateTodo(edit.id, value);\r\n    setEdit({\r\n      id: null,\r\n      value: \"\",\r\n    });\r\n  };\r\n\r\n  if (edit.id) {\r\n    return <TodoForm edit={edit} onSubmit={submitUpdate} />;\r\n  }\r\n\r\n  return todos.map((todo, index) => (\r\n    <div\r\n      className={todo.isComplete ? \"todo-row complete\" : \"todo-row\"}\r\n      key={index}\r\n    >\r\n      <div\r\n        key={todo.id}\r\n        onClick={() => completeTodo(todo.id)}\r\n        className=\"write\"\r\n      >\r\n        {todo.text}\r\n      </div>\r\n      <div className=\"icons\">\r\n        <AiFillEdit\r\n          onClick={() => setEdit({ id: todo.id, value: todo.text })}\r\n          className=\"edit-icon\"\r\n        />\r\n        <RiCloseLine\r\n          onClick={() => removeTodo(todo.id)}\r\n          className=\"delete-icon\"\r\n        />\r\n      </div>\r\n    </div>\r\n  ));\r\n}\r\n\r\nexport default Todo;\r\n","import React, { useState } from \"react\";\r\nimport Todo from \"./../Todo/Todo\";\r\nimport TodoForm from \"../TodoForm/TodoForm\";\r\nimport \"./TodoList.css\";\r\n\r\nfunction TodoList() {\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  const addTodo = (todo) => {\r\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\r\n      return;\r\n    }\r\n    const newTodos = [todo, ...todos];\r\n\r\n    setTodos(newTodos);\r\n  };\r\n\r\n  const updateTodo = (todoId, newValue) => {\r\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n      return;\r\n    }\r\n    setTodos((prev) =>\r\n      prev.map((item) => (item.id === todoId ? newValue : item))\r\n    );\r\n  };\r\n\r\n  const removeTodo = (id) => {\r\n    const removeArr = [...todos.filter((todo) => todo.id !== id)];\r\n    setTodos(removeArr);\r\n  };\r\n\r\n  const completeTodo = (id) => {\r\n    let updatedTodos = todos.map((todo) => {\r\n      if (todo.id === id) {\r\n        todo.isComplete = !todo.isComplete;\r\n      }\r\n      return todo;\r\n    });\r\n    setTodos(updatedTodos);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"tittle\">Quais s√£o seus planos para hoje?</h1>\r\n      <TodoForm onSubmit={addTodo} className=\"write\" />\r\n\r\n      <Todo\r\n        todos={todos}\r\n        completeTodo={completeTodo}\r\n        removeTodo={removeTodo}\r\n        updateTodo={updateTodo}\r\n        className=\"write\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n","import \"./App.css\";\r\nimport TodoList from \"./components/TodoList/TodoList\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"todo-app\">\r\n      <TodoList />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <body className=\"main\">\r\n      <App />\r\n    </body>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}